'use client';

import { useState } from 'react';
import Link from 'next/link';
import MainNavigation from '@/components/MainNavigation';
import Footer from '@/components/Footer';

// –¢–∏–ø—ã –¥–ª—è —É—á–µ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
type LessonStatus = 'completed' | 'in-progress' | 'locked' | 'available';

type Lesson = {
  id: string;
  title: string;
  description: string;
  duration: number; // –≤ –º–∏–Ω—É—Ç–∞—Ö
  status: LessonStatus;
  type: 'theory' | 'practice' | 'test';
};

type Module = {
  id: string;
  title: string;
  description: string;
  progress: number;
  lessons: Lesson[];
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–∫–∞
const LessonCard = ({ lesson, onClick }: { lesson: Lesson; onClick: () => void }) => {
  const statusClasses = {
    'completed': 'bg-green-100 dark:bg-green-900/30 border-green-300 dark:border-green-800',
    'in-progress': 'bg-blue-100 dark:bg-blue-900/30 border-blue-300 dark:border-blue-800',
    'available': 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-700',
    'locked': 'bg-gray-100 dark:bg-gray-900/50 border-gray-300 dark:border-gray-800 opacity-70'
  };

  const statusIcons = {
    'completed': '‚úì',
    'in-progress': '‚ñ∂',
    'available': '',
    'locked': 'üîí'
  };

  const typeIcons = {
    'theory': 'üìö',
    'practice': '‚úèÔ∏è',
    'test': 'üìù'
  };

  return (
    <div
      onClick={lesson.status !== 'locked' ? onClick : undefined}
      className={`p-4 border rounded-lg mb-3 ${statusClasses[lesson.status]} ${lesson.status !== 'locked' ? 'cursor-pointer' : 'cursor-not-allowed'}`}
    >
      <div className="flex justify-between items-start">
        <div className="flex-1">
          <div className="flex items-center">
            <span className="mr-2">{typeIcons[lesson.type]}</span>
            <h4 className="text-lg font-medium">{lesson.title}</h4>
            {lesson.status === 'completed' && <span className="ml-2 text-green-600 dark:text-green-400">{statusIcons[lesson.status]}</span>}
            {lesson.status === 'in-progress' && <span className="ml-2 text-blue-600 dark:text-blue-400">{statusIcons[lesson.status]}</span>}
            {lesson.status === 'locked' && <span className="ml-2 text-gray-500">{statusIcons[lesson.status]}</span>}
          </div>
          <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">{lesson.description}</p>
        </div>
        <div className="text-sm text-gray-500 dark:text-gray-400 whitespace-nowrap ml-4">
          {lesson.duration} –º–∏–Ω
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥—É–ª—è
const ModuleCard = ({ module, expanded, onToggle, onLessonClick }: {
  module: Module;
  expanded: boolean;
  onToggle: () => void;
  onLessonClick: (lessonId: string) => void;
}) => {
  return (
    <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md mb-6">
      <div
        className="flex justify-between items-center cursor-pointer"
        onClick={onToggle}
      >
        <div>
          <h3 className="text-xl font-semibold">{module.title}</h3>
          <p className="text-gray-600 dark:text-gray-400 mt-1">{module.description}</p>
        </div>
        <div className="flex items-center">
          <div className="mr-4">
            <span className="text-sm font-medium text-gray-700 dark:text-gray-300">
              {module.progress}%
            </span>
          </div>
          <button className="p-1">
            {expanded ? (
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 15l7-7 7 7" />
              </svg>
            ) : (
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
              </svg>
            )}
          </button>
        </div>
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
      <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 mt-4">
        <div
          className="bg-blue-600 h-2.5 rounded-full"
          style={{ width: `${module.progress}%` }}
        ></div>
      </div>

      {/* –£—Ä–æ–∫–∏ */}
      {expanded && (
        <div className="mt-6 space-y-2">
          {module.lessons.map(lesson => (
            <LessonCard
              key={lesson.id}
              lesson={lesson}
              onClick={() => onLessonClick(lesson.id)}
            />
          ))}
        </div>
      )}
    </div>
  );
};

export default function StudyPlanPage() {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–æ–¥—É–ª–µ–π
  const [expandedModules, setExpandedModules] = useState<Record<string, boolean>>({
    'module1': true,
    'module2': false,
    'module3': false,
  });

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥—É–ª–µ–π –∏ —É—Ä–æ–∫–æ–≤
  const modules: Module[] = [
    {
      id: 'module1',
      title: '–û—Å–Ω–æ–≤—ã –∞–ª–≥–µ–±—Ä—ã',
      description: '–ë–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏ –æ–ø–µ—Ä–∞—Ü–∏–∏',
      progress: 75,
      lessons: [
        {
          id: 'lesson1',
          title: '–ß–∏—Å–ª–æ–≤—ã–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞',
          description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ, —Ü–µ–ª—ã–µ, —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏ –∏—Ä—Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞',
          duration: 30,
          status: 'completed',
          type: 'theory'
        },
        {
          id: 'lesson2',
          title: '–ê–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è',
          description: '–û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∞–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏',
          duration: 45,
          status: 'completed',
          type: 'theory'
        },
        {
          id: 'lesson3',
          title: '–†–µ—à–µ–Ω–∏–µ –ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π',
          description: '–ú–µ—Ç–æ–¥—ã —Ä–µ—à–µ–Ω–∏—è –ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π —Å –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π',
          duration: 60,
          status: 'in-progress',
          type: 'practice'
        },
        {
          id: 'lesson4',
          title: '–ü—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π —Ç–µ—Å—Ç',
          description: '–¢–µ—Å—Ç –ø–æ –æ—Å–Ω–æ–≤–∞–º –∞–ª–≥–µ–±—Ä—ã',
          duration: 20,
          status: 'available',
          type: 'test'
        }
      ]
    },
    {
      id: 'module2',
      title: '–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è',
      description: '–†–µ—à–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ',
      progress: 30,
      lessons: [
        {
          id: 'lesson5',
          title: '–§–æ—Ä–º—É–ª–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è',
          description: '–í—ã–≤–æ–¥ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã',
          duration: 40,
          status: 'completed',
          type: 'theory'
        },
        {
          id: 'lesson6',
          title: '–¢–µ–æ—Ä–µ–º–∞ –í–∏–µ—Ç–∞',
          description: '–°–≤—è–∑—å –º–µ–∂–¥—É –∫–æ—Ä–Ω—è–º–∏ –∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏',
          duration: 35,
          status: 'available',
          type: 'theory'
        },
        {
          id: 'lesson7',
          title: '–ü—Ä–∞–∫—Ç–∏–∫–∞ —Ä–µ—à–µ–Ω–∏—è —É—Ä–∞–≤–Ω–µ–Ω–∏–π',
          description: '–†–µ—à–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π',
          duration: 50,
          status: 'locked',
          type: 'practice'
        },
        {
          id: 'lesson8',
          title: '–ü—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π —Ç–µ—Å—Ç',
          description: '–¢–µ—Å—Ç –ø–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–º —É—Ä–∞–≤–Ω–µ–Ω–∏—è–º',
          duration: 25,
          status: 'locked',
          type: 'test'
        }
      ]
    },
    {
      id: 'module3',
      title: '–§—É–Ω–∫—Ü–∏–∏ –∏ –≥—Ä–∞—Ñ–∏–∫–∏',
      description: '–ò–∑—É—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –∏ –∏—Ö –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ',
      progress: 0,
      lessons: [
        {
          id: 'lesson9',
          title: '–ü–æ–Ω—è—Ç–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏',
          description: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, –æ–±–ª–∞—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏ –∑–Ω–∞—á–µ–Ω–∏–π',
          duration: 30,
          status: 'locked',
          type: 'theory'
        },
        {
          id: 'lesson10',
          title: '–õ–∏–Ω–µ–π–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è',
          description: '–°–≤–æ–π—Å—Ç–≤–∞ –∏ –≥—Ä–∞—Ñ–∏–∫ –ª–∏–Ω–µ–π–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
          duration: 40,
          status: 'locked',
          type: 'theory'
        },
        {
          id: 'lesson11',
          title: '–ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è',
          description: '–°–≤–æ–π—Å—Ç–≤–∞ –∏ –≥—Ä–∞—Ñ–∏–∫ –∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏',
          duration: 45,
          status: 'locked',
          type: 'theory'
        },
        {
          id: 'lesson12',
          title: '–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤',
          description: '–ü—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π',
          duration: 60,
          status: 'locked',
          type: 'practice'
        }
      ]
    }
  ];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–æ–¥—É–ª—è
  const toggleModule = (moduleId: string) => {
    setExpandedModules({
      ...expandedModules,
      [moduleId]: !expandedModules[moduleId]
    });
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —É—Ä–æ–∫—É
  const handleLessonClick = (lessonId: string) => {
    console.log(`–û—Ç–∫—Ä—ã—Ç —É—Ä–æ–∫ —Å ID: ${lessonId}`);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —É—Ä–æ–∫—É
  };

  return (
    <div className="min-h-screen bg-gray-100 dark:bg-gray-900">
      <MainNavigation />

      {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
      <div className="py-10">
        <header>
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <h1 className="text-3xl font-bold text-gray-900 dark:text-white">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —É—á–µ–±–Ω—ã–π –ø–ª–∞–Ω</h1>
            <p className="mt-2 text-gray-600 dark:text-gray-400">
              –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –æ–±—É—á–µ–Ω–∏—è, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
            </p>
          </div>
        </header>

        <main>
          <div className="max-w-3xl mx-auto sm:px-6 lg:px-8 py-6">
            {/* –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å */}
            <div className="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md mb-8">
              <h2 className="text-xl font-semibold mb-4">–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</h2>
              <div className="flex items-center">
                <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-4 mr-4">
                  <div
                    className="bg-blue-600 h-4 rounded-full"
                    style={{ width: '35%' }}
                  ></div>
                </div>
                <span className="text-sm font-medium text-gray-700 dark:text-gray-300 whitespace-nowrap">
                  35%
                </span>
              </div>
              <div className="mt-4 flex justify-between text-sm text-gray-600 dark:text-gray-400">
                <span>–ó–∞–≤–µ—Ä—à–µ–Ω–æ –º–æ–¥—É–ª–µ–π: 0/3</span>
                <span>–ó–∞–≤–µ—Ä—à–µ–Ω–æ —É—Ä–æ–∫–æ–≤: 3/12</span>
              </div>
            </div>

            {/* –ú–æ–¥—É–ª–∏ */}
            <div className="space-y-6">
              {modules.map(module => (
                <ModuleCard
                  key={module.id}
                  module={module}
                  expanded={expandedModules[module.id] || false}
                  onToggle={() => toggleModule(module.id)}
                  onLessonClick={handleLessonClick}
                />
              ))}
            </div>
          </div>
        </main>
      </div>
      <Footer />
    </div>
  );
}
